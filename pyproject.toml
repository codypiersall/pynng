[project]
name = "pynng"
authors = [
    {name = "Cody Piersall", email = "cody.piersall@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: AsyncIO",
    "Framework :: Trio",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Networking",
]
dependencies = [
    "cffi",
    "sniffio",
]
description = "Networking made simply using nng"
# Note: when we drop Python 3.8 we can use the new license version and CI won't yell at
# setuptools 3.8 requires this version.
# uncomment when dropping python3.8
# license = "MIT"
license = {file = "LICENSE.txt"}
dynamic = ["version"]
keywords = [
    "networking",
    "nng",
    "nanomsg",
    "zmq",
    "messaging",
    "message",
    "trio",
    "asyncio",
]
readme = "README.md"

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-trio",
    "trio",
]

docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "sphinxcontrib-trio",
]

[project.urls]
Homepage = "https://github.com/codypiersall/pynng"
Source = "https://github.com/codypiersall/pynng"
Documentation = "https://pynng.readthedocs.io/en/latest/"

[tool.setuptools.dynamic]
version = {attr = "pynng._version.__version__"}
[tool.setuptools.packages.find]
include = ["pynng"]

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
    "cffi",
    "cmake",
    "build",
    "wheel",
]

[tool.cibuildwheel]
test-requires = [
    "pytest",
    "pytest-asyncio",
    "pytest-trio",
    "trio",
]

test-command = "pytest {project}/test"

# 3.14 does not have cffi support yet (Sep. 2025)
skip = "cp314*"

build-verbosity = 1

[tool.cibuildwheel.windows]
# Windows builds fail because they try to use the same directory for different
# architectures, and that's no good.
before-build = "bash .github/rmstuff.sh"

[tool.cibuildwheel.macos]
# Specify universal2 building for macOS
archs = ["universal2"]
environment = { CMAKE_OSX_ARCHITECTURES="x86_64;arm64" }

[tool.black]
# Just a placeholder because I have a plugin that won't run without a section in
# pyproject.toml
target-version = ["py38"]

# pytest configuration
[tool.pytest.ini_options]
addopts = "--capture=no --verbose"
testpaths = "test"
